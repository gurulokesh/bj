/**
 * Script Name: vucitynr
 * 
 *
 * Feel free to explore, or check out the full documentation
 * https://docs.newrelic.com/docs/synthetics/new-relic-synthetics/scripting-monitors/writing-scripted-browsers
 * for details.
 */

/** CONFIGURATIONS **/

// Theshold for duration of entire script - fails test if script lasts longer than X (in ms)
// Script-wide timeout for all wait and waitAndFind functions (in ms)
var DefaultTimeout = 90000;
// Change to any User Agent you want to use.
// Leave as "default" or empty to use the Synthetics default.
var UserAgent = "default";

/** HELPER VARIABLES AND FUNCTIONS **/

var assert = require('assert'),
  By = $driver.By,
  browser = $browser.manage(),
  startTime = Date.now(),
  stepStartTime = Date.now(),
  prevMsg = '',
  prevStep = 0,
  lastStep = 9999,
VARS = {};

// If you don't know what those are, fuggedaboutit!
// VARS = {{scriptManualEntryData}};

var log = function(thisStep, thisMsg) {
  if (thisStep > 1 || thisStep == lastStep) {
    var totalTimeElapsed = Date.now() - startTime;
    var prevStepTimeElapsed = totalTimeElapsed - stepStartTime;
    console.log('Step ' + prevStep + ': ' + prevMsg + ' FINISHED. It took ' + prevStepTimeElapsed + 'ms to complete.');
    $util.insights.set('Step ' + prevStep + ': ' + prevMsg, prevStepTimeElapsed);
    if (DefaultTimeout > 0 && totalTimeElapsed > DefaultTimeout) {
      throw new Error('Script timed out. ' + totalTimeElapsed + 'ms is longer than script timeout threshold of ' + DefaultTimeout + 'ms.');
    }
  }
  if (thisStep > 0 && thisStep != lastStep) {
    stepStartTime = Date.now() - startTime;
    console.log('Step ' + thisStep + ': ' + thisMsg + ' STARTED at ' + stepStartTime + 'ms.');
    prevMsg = thisMsg;
    prevStep = thisStep;
  }
};

/** BEGINNING OF SCRIPT **/

console.log('Starting synthetics script: vucitynr');
console.log('Default timeout is set to ' + (DefaultTimeout/1000) + ' seconds');
console.log('Variables set in this script: ', VARS);

// Setting User Agent is not then-able, so we do this first (if defined and not default)
if (UserAgent && (0 !== UserAgent.trim().length) && (UserAgent != 'default')) {
  $browser.addHeader('User-Agent', UserAgent);
  console.log('Setting User-Agent to ' + UserAgent);
}

// Get browser capabilities and do nothing with it, so that we start with a then-able command
$browser.getCapabilities().then(function () { })

// Step 1
.then(function() {
  log(1, '$browser.get("https://vrijuit.nl/nl/vakanties")');
  return $browser.get("https://vrijuit.nl/nl/vakanties"); })


// Step 1.1
.then(function() {
  log(1.1, 'setElementText "AutoCompleteCity"');
  return $browser.waitForAndFindElement(By.name("AutoCompleteCity"), DefaultTimeout); })
.then(function (el) {
  el.clear();
  el.sendKeys("Spanje"); })

// Step 1.2
.then(function() {
  log(1.2, 'clickElement "span.search-highlight"');
  return $browser.waitForAndFindElement(By.css("span.search-highlight"), DefaultTimeout); })
.then(function (el) { el.click(); })

// Step 1.3
.then(function() {
  log(1.3, 'clickElement "//form[@id=\'ibe-search\']//button[.=\'zoeken >\']"');
  return $browser.waitForAndFindElement(By.xpath("//form[@id=\'ibe-search\']//button[.=\'zoeken >\']"), DefaultTimeout); })
.then(function (el) { el.click(); })



// Step 2
.then(function() {
  log(2, 'clickElement "info & prijs"');
  return $browser.waitForAndFindElement(By.linkText("info & prijs") , DefaultTimeout); })
.then(function (el) { el.click(); })

// Step 3
.then(function() {
  log(3, '$browser.get("https://vrijuit.nl/nl/vakanties")');
  return $browser.get("https://vrijuit.nl/nl/vakanties"); })



// Step 3.1
.then(function() {
  log(3.1, 'setElementText "AutoCompleteCity"');
  return $browser.waitForAndFindElement(By.name("AutoCompleteCity"), DefaultTimeout); })
.then(function (el) {
  el.clear();
  el.sendKeys("Spanje"); })

// Step 3.2
.then(function() {
  log(3.2, 'clickElement "span.search-highlight"');
  return $browser.waitForAndFindElement(By.css("span.search-highlight"), DefaultTimeout); })
.then(function (el) { el.click(); })

// Step 3.3
.then(function() {
  log(3.3, 'clickElement "//form[@id=\'ibe-search\']//button[.=\'zoeken >\']"');
  return $browser.waitForAndFindElement(By.xpath("//form[@id=\'ibe-search\']//button[.=\'zoeken >\']"), DefaultTimeout); })
.then(function (el) { el.click(); })


// Step 4
.then(function() {
  log(4, 'clickElement "form[@id=\'ibe-search\']//section//div//div//div//span[2]//label"');
  return $browser.waitForAndFindElement(By.xpath("//form[@id=\'ibe-search\']//section//div//div//div//span[2]//label") , DefaultTimeout); })
.then(function (el) { el.click(); })

// Step 5
.then(function() {
  log(5, 'clickElement "info & prijs"');
  return $browser.waitForAndFindElement(By.linkText("info & prijs") , DefaultTimeout); })
.then(function (el) { el.click(); })

// Step 6
.then(function() {
  log(6, '$browser.get("https://vrijuit.nl/nl/vakanties")');
  return $browser.get("https://vrijuit.nl/nl/vakanties"); })




// Step 6.1
.then(function() {
  log(6.1, 'setElementText "AutoCompleteCity"');
  return $browser.waitForAndFindElement(By.name("AutoCompleteCity"), DefaultTimeout); })
.then(function (el) {
  el.clear();
  el.sendKeys("Spanje"); })

// Step 6.2
.then(function() {
  log(6.2, 'clickElement "span.search-highlight"');
  return $browser.waitForAndFindElement(By.css("span.search-highlight"), DefaultTimeout); })
.then(function (el) { el.click(); })

// Step 6.3
.then(function() {
  log(6.3, 'clickElement "//form[@id=\'ibe-search\']//button[.=\'zoeken >\']"');
  return $browser.waitForAndFindElement(By.xpath("//form[@id=\'ibe-search\']//button[.=\'zoeken >\']"), DefaultTimeout); })
.then(function (el) { el.click(); })




// Step 7
.then(function() {
  log(7, 'clickElement "form[@id=\'ibe-search\']//section//div//div//div//span[2]//label"');
  return $browser.waitForAndFindElement(By.xpath("//form[@id=\'ibe-search\']//section//div//div//div//span[3]//label") , DefaultTimeout); })
.then(function (el) { el.click(); })

// Step 8
.then(function() {
  log(8, 'clickElement "info & prijs"');
  return $browser.waitForAndFindElement(By.linkText("info & prijs") , DefaultTimeout); })
.then(function (el) { el.click(); })


.then(function() {
  log(lastStep, '');
  console.log('Browser script execution SUCCEEDED.');
  $browser.takeScreenshot();
}, function(err) {
  console.log ('Browser script execution FAILED.');
  $browser.takeScreenshot();
  throw(err);
});

/** END OF SCRIPT **/
